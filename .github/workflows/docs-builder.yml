name: "docs-builder"

on:
  repository_dispatch:
    types: [docs-builder]
  workflow_dispatch:
  push:
    paths:
      - "Dockerfile"
      - "docs.conf"
    branches:
      - "main"

permissions:
  id-token: write
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:

  init:
    name: Job Init
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.init.outputs.action }}
    steps:
      - id: init
        name: ${{ github.ref_name }}
        shell: bash
        run: |
          if [[ -n "${{ secrets.DEPLOYED }}" ]]
          then
            if [[ "${{ secrets.DEPLOYED }}" == "true" ]]
            then
              if [[ -n "${{ secrets.ACR_LOGIN_SERVER }}" ]] && dig "${{ secrets.ACR_LOGIN_SERVER }}" +short > /dev/null 2>&1
              then
                echo 'action=build' >> "${GITHUB_OUTPUT}"
              else
                echo 'action=skip' >> "${GITHUB_OUTPUT}"
                echo "Error: ACR_LOGIN_SERVER is not a valid or resolvable DNS entry" >&2
                exit 1
              fi
            fi
          else
            echo 'action=skip' >> "${GITHUB_OUTPUT}"
          fi

  increment-version:
    name: Increment Version
    if: needs.init.outputs.action == 'build'
    needs: [init]
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.new_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - name: Fetch Version Branch
        run: |
          git fetch origin version || git checkout -b version
          git checkout version || git checkout -b version

      - name: Increment VERSION File
        id: set_version
        run: |
          # Check if VERSION file exists
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
            if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Invalid VERSION format. Exiting."
              exit 1
            fi
            IFS='.' read -r major minor patch <<< "$VERSION"
            ((patch++))
            NEW_VERSION="${major}.${minor}.${patch}"
          else
            NEW_VERSION="0.0.1"
          fi
          echo "$NEW_VERSION" > VERSION
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

  build:
    name: Build and Push Container
    if: success()
    runs-on: ubuntu-latest
    needs: [increment-version, init]
    env:
      new_version: ${{ needs.increment-version.outputs.new_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - name: Microsoft Azure Authentication
        uses: azure/login@a65d910e8af852a8061c627c456678983e180302
        with:
          allow-no-subscriptions: true
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login
        uses: azure/docker-login@15c4aadf093404726ab2ff205b2cdd33fa6d054c
        with:
          login-server: "${{ secrets.ACR_LOGIN_SERVER }}"
          username: ${{ secrets.ARM_CLIENT_ID }}
          password: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349

      - name: setup ssh config
        shell: bash
        run: |
          echo "${{ env.new_version }}"
          mkdir -p ~/.ssh
          cat << EOF > ~/.ssh/config
          Host xxx
            HostName github.com
            User git
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
          EOF

      - name: Create Temporary Directory
        id: create-temp-dir
        run: |
          TEMP_DIR=$(mktemp -d)
          echo "TEMP_DIR=$TEMP_DIR" >> $GITHUB_ENV

      - name: Clone Landing Page
        shell: bash
        run: |
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.LANDING_PAGE_SSH_PRIVATE_KEY}}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          mkdir $TEMP_DIR/landing-page
          git clone git@github.com:${{ github.repository_owner }}/landing-page.git $TEMP_DIR/landing-page/docs

      - name: Link mkdocs.yml
        shell: bash
        run: |
          echo 'site_name: "Hands on Labs"' > $TEMP_DIR/landing-page/mkdocs.yml
          echo 'INHERIT: docs/theme/mkdocs.yml' > $TEMP_DIR/landing-page/mkdocs.yml

      - name: Clone Theme
        shell: bash
        run: |
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.THEME_SSH_PRIVATE_KEY}}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          git clone git@github.com:${{ github.repository_owner }}/theme.git $TEMP_DIR/landing-page/docs/theme
          docker run --rm -v $TEMP_DIR/landing-page:/docs ${{ secrets.MKDOCS_REPO_NAME }} build -c -d site/
          mkdir -p $TEMP_DIR/build/
          cp -a $TEMP_DIR/landing-page/site $TEMP_DIR/build/

      - name: Clone Content Repos
        shell: bash
        run: |
          mkdir -p $TEMP_DIR/src/cloud
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.CLOUD_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          git clone git@github.com:${{ github.repository_owner }}/cloud.git $TEMP_DIR/src/cloud/docs
          echo '# Hands on Labs' > $TEMP_DIR/src/cloud/docs/index.md
          cp -a $TEMP_DIR/landing-page/docs/theme $TEMP_DIR/src/cloud/docs/
          echo 'site_name: "Hands on Labs"' > $TEMP_DIR/src/cloud/mkdocs.yml
          echo 'INHERIT: docs/theme/mkdocs.yml' >> $TEMP_DIR/src/cloud/mkdocs.yml
          docker run --rm -v $TEMP_DIR/src/cloud:/docs ${{ secrets.MKDOCS_REPO_NAME }} build -d site/
          mv $TEMP_DIR/src/cloud/site $TEMP_DIR/build/site/cloud

          mkdir -p $TEMP_DIR/src/ot
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.OT_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          git clone git@github.com:${{ github.repository_owner }}/ot.git $TEMP_DIR/src/ot/docs
          echo '# Hands on Labs' > $TEMP_DIR/src/ot/docs/index.md
          cp -a $TEMP_DIR/landing-page/docs/theme $TEMP_DIR/src/ot/docs/
          echo 'site_name: "Hands on Labs"' > $TEMP_DIR/src/ot/mkdocs.yml
          echo 'INHERIT: docs/theme/mkdocs.yml' >> $TEMP_DIR/src/ot/mkdocs.yml
          docker run --rm -v $TEMP_DIR/src/ot:/docs ${{ secrets.MKDOCS_REPO_NAME }} build -d site/
          mv $TEMP_DIR/src/ot/site $TEMP_DIR/build/site/ot

          mkdir -p $TEMP_DIR/src/secops
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.SECOPS_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          git clone git@github.com:${{ github.repository_owner }}/secops.git $TEMP_DIR/src/secops/docs
          echo '# Hands on Labs' > $TEMP_DIR/src/secops/docs/index.md
          cp -a $TEMP_DIR/landing-page/docs/theme $TEMP_DIR/src/secops/docs/
          echo 'site_name: "Hands on Labs"' > $TEMP_DIR/src/secops/mkdocs.yml
          echo 'INHERIT: docs/theme/mkdocs.yml' >> $TEMP_DIR/src/secops/mkdocs.yml
          docker run --rm -v $TEMP_DIR/src/secops:/docs ${{ secrets.MKDOCS_REPO_NAME }} build -d site/
          mv $TEMP_DIR/src/secops/site $TEMP_DIR/build/site/secops

          mkdir -p $TEMP_DIR/src/sase
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.SASE_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          git clone git@github.com:${{ github.repository_owner }}/sase.git $TEMP_DIR/src/sase/docs
          echo '# Hands on Labs' > $TEMP_DIR/src/sase/docs/index.md
          cp -a $TEMP_DIR/landing-page/docs/theme $TEMP_DIR/src/sase/docs/
          echo 'site_name: "Hands on Labs"' > $TEMP_DIR/src/sase/mkdocs.yml
          echo 'INHERIT: docs/theme/mkdocs.yml' >> $TEMP_DIR/src/sase/mkdocs.yml
          docker run --rm -v $TEMP_DIR/src/sase:/docs ${{ secrets.MKDOCS_REPO_NAME }} build -d site/
          mv $TEMP_DIR/src/sase/site $TEMP_DIR/build/site/sase

          mkdir -p $TEMP_DIR/src/references
          if [ -f ~/.ssh/id_ed25519 ]; then chmod 600 ~/.ssh/id_ed25519; fi
          echo '${{ secrets.REFERENCES_SSH_PRIVATE_KEY }}' > ~/.ssh/id_ed25519 && chmod 400 ~/.ssh/id_ed25519
          git clone git@github.com:${{ github.repository_owner }}/references.git $TEMP_DIR/src/references/docs
          echo '# Hands on Labs' > $TEMP_DIR/src/references/docs/index.md
          cp -a $TEMP_DIR/landing-page/docs/theme $TEMP_DIR/src/references/docs/
          echo 'site_name: "Hands on Labs"' > $TEMP_DIR/src/references/mkdocs.yml
          echo 'INHERIT: docs/theme/mkdocs.yml' >> $TEMP_DIR/src/references/mkdocs.yml
          docker run --rm -v $TEMP_DIR/src/references:/docs ${{ secrets.MKDOCS_REPO_NAME }} build -d site/
          mv $TEMP_DIR/src/references/site $TEMP_DIR/build/site/references

      - name: Copy Workdir to TEMP_DIR
        run: |
          cp -a $GITHUB_WORKSPACE/* $TEMP_DIR/build

      - name: Create htaccess password
        run: |
          htpasswd -b -c $TEMP_DIR/build/.htpasswd ${{ secrets.DOCS_USERNAME }} ${{ secrets.HTPASSWD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: ${{ github.workspace }}
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/docs:${{ env.new_version }},${{ secrets.ACR_LOGIN_SERVER }}/docs:latest

  update-version-branch:
    name: Update Version Branch
    needs: [init, increment-version, build]
    runs-on: ubuntu-latest
    if: success()
    env:
      new_version: ${{ needs.increment-version.outputs.new_version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - name: Setup Git Configuration
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch Version Branch or Create It
        run: |
          git fetch origin version:version || git checkout -b version

      - name: Switch to Version Branch
        run: |
          git checkout version || git checkout -b version

      - name: Update VERSION File
        run: |
          echo "${{ env.new_version }}" > VERSION

      - name: Commit Changes
        run: |
          git add VERSION
          git commit -m "Increment version to ${{ env.new_version }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f
        with:
          branch: version
          commit-message: "Increment version to ${{ env.new_version }}"
          title: "Increment version to ${{ env.new_version }}"
          body: "This PR increments the version to ${{ env.new_version }}."
          base: version

      - name: Enable Pull Request AutoMerge
        uses: peter-evans/enable-pull-request-automerge@a660677d5469627102a1c1e11409dd063606628d
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ steps.create-pull-request.outputs.pull-request-number }}
          merge-method: squash

  dispatch-manifest-update:
    name: Dispatch Manifest Update
    needs: [init, increment-version, build, update-version-branch]
    runs-on: ubuntu-latest
    if: success()
    env:
      new_version: ${{ needs.increment-version.outputs.new_version }}
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository_owner }}/${{ secrets.MANIFESTS_REPO_NAME }}
          event-type: update-manifest
          client-payload: |-
            {
              "type": "applications",
              "name": "docs",
              "file": "Deployment.yaml",
              "spec": ".spec.template.spec.containers[0].image",
              "value": "${{ secrets.ACR_LOGIN_SERVER }}/docs:${{ env.new_version }}"
            }
